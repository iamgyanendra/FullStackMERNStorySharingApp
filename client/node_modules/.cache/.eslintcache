[{"C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\index.js":"1","C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\App.js":"2","C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\reducers\\index.js":"3","C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\styles.js":"4","C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\action\\posts.js":"5","C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\components\\Posts\\Posts.js":"6","C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\components\\Forms\\Forms.js":"7","C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\reducers\\posts.js":"8","C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\constants\\actionType.js":"9","C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\components\\Posts\\styles.js":"10","C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\components\\Forms\\styles.js":"11","C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\components\\Posts\\Post\\Post.js":"12","C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\api\\index.js":"13","C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\components\\Posts\\Post\\styles.js":"14","C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\components\\Navbar\\Navbar.js":"15","C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\components\\Navbar\\styles.js":"16","C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\components\\Home\\Home.js":"17","C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\components\\Auth\\Auth.js":"18","C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\components\\Auth\\styles.js":"19","C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\components\\Auth\\Input.js":"20","C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\components\\Auth\\icon.js":"21","C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\reducers\\auth.js":"22","C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\action\\auth.js":"23","C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\components\\Pagination.jsx":"24","C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\components\\styles.js":"25","C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\components\\PostDetails\\PostDetails.jsx":"26","C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\components\\Home\\styles.js":"27","C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\components\\PostDetails\\styles.js":"28"},{"size":555,"mtime":1626262967215,"results":"29","hashOfConfig":"30"},{"size":1019,"mtime":1626971787087,"results":"31","hashOfConfig":"30"},{"size":165,"mtime":1626262550294,"results":"32","hashOfConfig":"30"},{"size":488,"mtime":1622998619490,"results":"33","hashOfConfig":"30"},{"size":2488,"mtime":1626968903732,"results":"34","hashOfConfig":"30"},{"size":907,"mtime":1626970412863,"results":"35","hashOfConfig":"30"},{"size":3566,"mtime":1626970965050,"results":"36","hashOfConfig":"30"},{"size":1265,"mtime":1626885520509,"results":"37","hashOfConfig":"30"},{"size":411,"mtime":1626971114400,"results":"38","hashOfConfig":"30"},{"size":278,"mtime":1621955740619,"results":"39","hashOfConfig":"30"},{"size":447,"mtime":1621890968538,"results":"40","hashOfConfig":"30"},{"size":3825,"mtime":1626969395007,"results":"41","hashOfConfig":"30"},{"size":1113,"mtime":1626970202565,"results":"42","hashOfConfig":"30"},{"size":1086,"mtime":1626951968729,"results":"43","hashOfConfig":"30"},{"size":2067,"mtime":1626557570061,"results":"44","hashOfConfig":"30"},{"size":957,"mtime":1626542039599,"results":"45","hashOfConfig":"30"},{"size":3827,"mtime":1626968088381,"results":"46","hashOfConfig":"30"},{"size":3998,"mtime":1626964912754,"results":"47","hashOfConfig":"30"},{"size":668,"mtime":1623859258752,"results":"48","hashOfConfig":"30"},{"size":1108,"mtime":1623921487206,"results":"49","hashOfConfig":"30"},{"size":516,"mtime":1623911725883,"results":"50","hashOfConfig":"30"},{"size":541,"mtime":1626262472846,"results":"51","hashOfConfig":"30"},{"size":586,"mtime":1626265146643,"results":"52","hashOfConfig":"30"},{"size":938,"mtime":1626886643627,"results":"53","hashOfConfig":"30"},{"size":156,"mtime":1626706766989,"results":"54","hashOfConfig":"30"},{"size":3507,"mtime":1626969707081,"results":"55","hashOfConfig":"30"},{"size":425,"mtime":1626720228945,"results":"56","hashOfConfig":"30"},{"size":864,"mtime":1626893942518,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"p1kzhq",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\index.js",[],["122","123"],"C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\App.js",[],"C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\reducers\\index.js",[],"C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\styles.js",[],["124","125"],"C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\action\\posts.js",[],"C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\components\\Posts\\Posts.js",[],"C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\components\\Forms\\Forms.js",["126"],"import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Paper, Typography } from '@material-ui/core';\r\nimport FileBase from 'react-file-base64';//choose file\r\n//import { updatePost } from '../../../../server/controllers/posts';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport ChipInput from 'material-ui-chip-input';\r\n\r\n//get the current id from post for updating the post\r\nimport { createPost, updatePost } from '../../action/posts';\r\nimport useStyles from './styles';\r\n\r\nconst Forms = ({ currentId, setCurrentId }) => {\r\n  const [postData, setPostData] = useState({ title: '', message: '', tags: [], selectedFile: '' });\r\n  const post = useSelector((state) => (currentId ? state.posts.posts.find((message) => message._id === currentId) : null));\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const user = JSON.parse(localStorage.getItem('profile'));\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!post?.title) clear();\r\n    if (post) setPostData(post);\r\n  }, [post]);\r\n\r\n  const clear = () => {\r\n    setCurrentId(0)\r\n    setPostData({ title: '', message: '', tags: [], selectedFile: '' })\r\n\r\n  }\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (currentId === 0) {\r\n      dispatch(createPost({ ...postData, name: user?.result?.name }, history));\r\n      clear();\r\n    } else {\r\n      dispatch(updatePost(currentId, { ...postData, name: user?.result?.name }));\r\n      clear();\r\n    }\r\n  };\r\n\r\n  if (!user?.result?.name) { // if user is not logged in\r\n    return (<Paper>\r\n      <Typography className={classes.paper} color=\"primary\">\r\n        Please Sign In to Write Your Own Stories and Like other's Stories.\r\n      </Typography>\r\n    </Paper>)\r\n\r\n  }\r\n  const handleAddChip = (tag) => {\r\n    setPostData({ ...postData, tags: [...postData.tags, tag] });\r\n  };\r\n\r\n  const handleDeleteChip = (chipToDelete) => {\r\n    setPostData({ ...postData, tags: postData.tags.filter((tag) => tag !== chipToDelete) });\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.paper} elevation={6}>\r\n      <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n        <Typography variant=\"h6\">{currentId ? `Editing \"${post?.title}\"` : 'Creating a Memory'}</Typography>\r\n        <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\r\n        <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth multiline rows={4} value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\r\n        <div style={{ padding: '5px 0', width: '94%' }}>\r\n          <ChipInput\r\n            name=\"tags\"\r\n            variant=\"outlined\"\r\n            label=\"Tags\"\r\n            fullWidth\r\n            value={postData.tags}\r\n            onAdd={(chip) => handleAddChip(chip)}\r\n            onDelete={(chip) => handleDeleteChip(chip)}\r\n          />\r\n        </div>\r\n        <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div>\r\n        <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\r\n        <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\r\n      </form>\r\n    </Paper>\r\n  )\r\n}\r\nexport default Forms;","C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\reducers\\posts.js",[],"C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\constants\\actionType.js",[],"C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\components\\Posts\\styles.js",[],"C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\components\\Forms\\styles.js",[],"C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\components\\Posts\\Post\\Post.js",["127","128"],"\r\nimport React from 'react';\r\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography, ButtonBase } from '@material-ui/core/';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport ThumbUpAltOutlined from '@material-ui/icons/ThumbUpAltOutlined';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport { useDispatch } from 'react-redux';\r\nimport moment from 'moment';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { getPost, likePost, deletePost } from '../../../action/posts';\r\nimport useStyles from './styles';\r\nconst Post = ({ post, setCurrentId }) => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const user = JSON.parse(localStorage.getItem('profile')); //get user name from localstorage\r\n\r\n  const Likes = () => {\r\n    if (post?.likes?.length > 0) {\r\n      return post.likes.find((like) => like === (user?.result?.googleId || user?.result?._id))\r\n        ? (\r\n          <><ThumbUpAltIcon fontSize=\"small\" />&nbsp;{post.likes.length > 2 ? `You and ${post.likes.length - 1} others` : `${post.likes.length} like${post.likes.length > 1 ? 's' : ''}` }</>\r\n        ) : (\r\n          <><ThumbUpAltOutlined fontSize=\"small\" />&nbsp;{post.likes.length} {post.likes.length === 1 ? 'Like' : 'Likes'}</>\r\n        );\r\n    }\r\n\r\n    return <><ThumbUpAltOutlined fontSize=\"small\" />&nbsp;Like</>;\r\n  };\r\n  \r\n\r\n  const openPost = (e) => {\r\n    // dispatch(getPost(post._id, history));\r\n\r\n    history.push(`/posts/${post._id}`);\r\n  };\r\n\r\n\r\n  return (\r\n    <Card className={classes.card} raised elevation={6}>\r\n      <ButtonBase\r\n        component=\"span\"\r\n        name=\"test\"\r\n        className={classes.cardAction}\r\n        onClick={openPost}\r\n      >\r\n        <CardMedia className={classes.media} image={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} title={post.title} />\r\n        <div className={classes.overlay}>\r\n          <Typography variant=\"h6\">{post.name}</Typography>\r\n          <Typography variant=\"body2\">{moment(post.createdAt).fromNow()}</Typography>\r\n        </div>\r\n        {(user?.result?.googleId === post?.creator || user?.result?._id === post?.creator) && (\r\n          <div className={classes.overlay2} name=\"edit\">\r\n            <Button\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                setCurrentId(post._id);\r\n              }}\r\n              style={{ color: 'white' }}\r\n              size=\"small\"\r\n            >\r\n              <MoreHorizIcon fontSize=\"medium\" />\r\n            </Button>\r\n          </div>\r\n        )}\r\n        <div className={classes.details}>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{post.tags.map((tag) => `#${tag} `)}</Typography>\r\n        </div>\r\n        <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\">{post.title}</Typography>\r\n        <CardContent>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{post.message.split(' ').splice(0, 20).join(' ')}...</Typography>\r\n        </CardContent>\r\n      </ButtonBase>\r\n      <CardActions className={classes.cardActions}>\r\n        <Button size=\"small\" color=\"primary\" disabled={!user?.result} onClick={() => dispatch(likePost(post._id))}>\r\n          <Likes />\r\n        </Button>\r\n        {(user?.result?.googleId === post?.creator || user?.result?._id === post?.creator) && (\r\n          <Button size=\"small\" color=\"secondary\" onClick={() => dispatch(deletePost(post._id))}>\r\n            <DeleteIcon fontSize=\"small\" /> &nbsp; Delete\r\n          </Button>\r\n        )}\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Post;","C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\api\\index.js",[],"C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\components\\Posts\\Post\\styles.js",[],"C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\components\\Navbar\\Navbar.js",["129"],"import React, { useState, useEffect } from 'react';\r\nimport { AppBar, Typography, Toolbar, Avatar, Button } from '@material-ui/core';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport decode from 'jwt-decode';\r\n\r\n//import memories from '../../images/memories.png';\r\nimport * as actionType from '../../constants/actionType';\r\nimport useStyles from './styles';\r\n\r\nconst Navbar = () => {\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const logout = () => {\r\n    dispatch({ type: actionType.LOGOUT });\r\n\r\n    history.push('/auth');\r\n\r\n    setUser(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const token = user?.token;\r\n\r\n    if (token) { //token expire\r\n      const decodedToken = decode(token);\r\n\r\n      if (decodedToken.exp * 1000 < new Date().getTime()) logout();\r\n    }\r\n\r\n    setUser(JSON.parse(localStorage.getItem('profile')));\r\n  }, [location]);\r\n\r\n  return (\r\n    <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\r\n      <div className={classes.brandContainer}>\r\n        <Typography component={Link} to=\"/\" className={classes.heading} variant=\"h5\" align=\"center\">Stories App</Typography>\r\n        \r\n      </div>\r\n      <Toolbar className={classes.toolbar}>\r\n        {user?.result ? (\r\n          <div className={classes.profile}>\r\n            <Avatar className={classes.purple} alt={user?.result.name} src={user?.result.imageUrl}>{user?.result.name.charAt(0)}</Avatar>\r\n            <Typography className={classes.userName} variant=\"h6\">{user?.result.name}</Typography>\r\n            <Button variant=\"contained\" className={classes.logout} color=\"secondary\" onClick={logout}>Logout</Button>\r\n          </div>\r\n        ) : (\r\n          <Button component={Link} to=\"/auth\" variant=\"contained\" color=\"primary\">Sign In</Button>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Navbar;","C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\components\\Navbar\\styles.js",[],"C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\components\\Home\\Home.js",["130","131"],"import React, { useState } from 'react';\r\nimport { Container, Grow, Grid, AppBar, TextField, Button, Paper, Chip } from '@material-ui/core';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport ChipInput from 'material-ui-chip-input';\r\n\r\nimport { getPostsBySearch } from '../../action/posts';\r\nimport Posts from '../Posts/Posts';\r\nimport Form from '../Forms/Forms';\r\nimport Pagination from '../Pagination';\r\nimport useStyles from './styles';\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\nconst Home = () => {\r\n\r\n    const classes = useStyles();\r\n    const query = useQuery();\r\n    const page = query.get('page') || 1 // this will read url and check if the]re is page parameter or not // if not at page then must be on first page\r\n    const searchQuery = query.get('searchQuery');\r\n\r\n    const [currentId, setCurrentId] = useState(0) //id is null at the start when id is not slected // sending to the comp\r\n    const dispatch = useDispatch();\r\n\r\n    const [search, setSearch]=useState('');\r\n    const [tags, setTags]= useState([])\r\n    const history = useHistory();\r\n    \r\n    \r\n    \r\n    const searchPost= ()=>{\r\n        if(search.trim() || tags){\r\n            //dispatch => fetch search post\r\n            dispatch(getPostsBySearch( {search, tags: tags.join(',')} )); //tags are like [USA, EROP] => 'usa,EROP' (string)\r\n            history.push(`/posts/search?searchQuery=${search || 'none'}&tags=${tags.join(',')}`);\r\n        }else{\r\n            history.push('/')//redirect back if nothing\r\n        }\r\n    }\r\n    const handleKeyPress = (e)=>{\r\n        if(e.keyCode===13){  //13 ===enter\r\n            //search post\r\n            searchPost();\r\n        }\r\n    }\r\n    const handleAddChip = (tag)=> setTags([...tags, tag])//spread old tag and add new tag init\r\n    \r\n    const handleDeleteChip = (chipToDelete) => setTags(tags.filter((tag) => tag !== chipToDelete));\r\n\r\n    return (\r\n        <Grow in>\r\n            <Container maxWidth=\"xl\">\r\n                <Grid container className={classes.mainContainer} justifyContent=\"space-between\" alignItems=\"stretch\" spacing={3} className={classes.gridContainer}>\r\n                    <Grid item xs={12} sm={6} md={9}>\r\n                        <Posts setCurrentId={setCurrentId} />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={3}>\r\n                        <AppBar className={classes.appBarSearch} position=\"static\" color=\"inherit\">\r\n                            <TextField name= \"search\" variant=\"outlined\" label=\"Search Stories\" fullWidth onKeyPress={handleKeyPress} value={search} onChange={(e)=>setSearch(e.target.value)} />\r\n                            <ChipInput \r\n                                style={{margin: '10px 0'}}\r\n                                value={tags} \r\n                                onAdd={(chip)=> handleAddChip(chip)}\r\n                                onDelete={(chip)=> handleDeleteChip(chip)}\r\n                                label=\"Search Tags\"\r\n                                variant=\"outlined\"\r\n                                />\r\n                            <Button onClick={searchPost} className={classes.searchButton} variant=\"contained\" color=\"primary\">Search</Button>\r\n                        </AppBar>\r\n                        <Form currentId={currentId} setCurrentId={setCurrentId} />\r\n                        {(!searchQuery && !tags.length) &&(\r\n                            \r\n                            <Paper className={classes.pagination} elevation={6}>\r\n                                <Pagination page={page} />\r\n                            </Paper>\r\n                        )}\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </Grow>\r\n    )\r\n}\r\nexport default Home;\r\n\r\n","C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\components\\Auth\\Auth.js",[],"C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\components\\Auth\\styles.js",[],"C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\components\\Auth\\Input.js",[],"C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\components\\Auth\\icon.js",[],"C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\reducers\\auth.js",[],"C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\action\\auth.js",[],"C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\components\\Pagination.jsx",["132"],"import React, {useEffect} from 'react'\r\nimport { Pagination, PaginationItem } from '@material-ui/lab';\r\n\r\nimport useStyles from './styles'\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getPosts } from '../action/posts';\r\n\r\n\r\nconst Paginate = ({page})=>{\r\n    const {numberOfPages} = useSelector((state)=>state.posts)\r\n    const classes = useStyles();\r\n    const dispatch= useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (page) dispatch(getPosts());\r\n    }, [page]);\r\n\r\n    return(\r\n        <Pagination\r\n            classes={{ul: classes.ul}}\r\n            count= {numberOfPages}\r\n            page={Number(page) || 1}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            renderItem={(item)=>(\r\n                <PaginationItem {...item} component={Link} to={`/posts?page=${item.page}`}/>\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Paginate;","C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\components\\styles.js",[],"C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\components\\PostDetails\\PostDetails.jsx",["133","134","135"],"import React, { useEffect } from 'react'\r\nimport { Paper, Typography, CircularProgress, Divider } from '@material-ui/core'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport moment from 'moment'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\n\r\nimport useStyles from './styles'\r\nimport { getPost, getPostsBySearch } from '../../action/posts'\r\nconst Post = () => {\r\n    const { post, posts, isLoading } = useSelector((state) => state.posts)\r\n    const disPatch = useDispatch();\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const { id } = useParams();\r\n\r\n    useEffect(()=>{\r\n        disPatch(getPost(id))\r\n    }, [id])\r\n\r\n    useEffect(()=>{\r\n        disPatch(getPostsBySearch({search: 'none', tags:post?.tags.join(',')}))\r\n    }, [post])\r\n\r\n    if(!post) return null\r\n    \r\n    if(isLoading){\r\n        return(\r\n            <Paper elevation={6} className={classes.loadingPaper}>\r\n                <CircularProgress size=\"7em\" />\r\n            </Paper>\r\n        )\r\n    }\r\n    const recommendedPosts = posts.filter(({_id})=> _id!==post._id) //removing crrunt post from recommended\r\n\r\n    const openPost = (_id) => history.push(`/posts/${_id}`)\r\n\r\n    return (\r\n        <Paper style={{ padding: '20px', borderRadius: '15px' }} elevation={6}>\r\n        <div className={classes.card}>\r\n          <div className={classes.section}>\r\n            <Typography variant=\"h3\" component=\"h2\">{post.title}</Typography>\r\n            <Typography gutterBottom variant=\"h6\" color=\"textSecondary\" component=\"h2\">{post.tags.map((tag) => `#${tag} `)}</Typography>\r\n            <Typography gutterBottom variant=\"body1\" component=\"p\">{post.message}</Typography>\r\n            <Typography variant=\"h6\">Created by: {post.name}</Typography>\r\n            <Typography variant=\"body1\">{moment(post.createdAt).fromNow()}</Typography>\r\n            <Divider style={{ margin: '20px 0' }} />\r\n            <Typography variant=\"body1\"><strong>Realtime Chat - coming soon!</strong></Typography>\r\n            <Divider style={{ margin: '20px 0' }} />\r\n            <Typography variant=\"body1\"><strong>Comments - coming soon!</strong></Typography>\r\n            <Divider style={{ margin: '20px 0' }} />\r\n          </div>\r\n          <div className={classes.imageSection}>\r\n            <img className={classes.media} src={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} alt={post.title} />\r\n          </div>\r\n        </div>\r\n        {!!recommendedPosts.length && (\r\n          <div className={classes.section}>\r\n            <Typography gutterBottom variant=\"h5\">You might also like:</Typography>\r\n            <Divider />\r\n            <div className={classes.recommendedPosts}>\r\n              {recommendedPosts.map(({ title, name, message, likes, selectedFile, _id }) => (\r\n                <div style={{ margin: '20px', cursor: 'pointer' }} onClick={() => openPost(_id)} key={_id}>\r\n                  <Typography gutterBottom variant=\"h6\">{title}</Typography>\r\n                  <Typography gutterBottom variant=\"subtitle2\">{name}</Typography>\r\n                  <Typography gutterBottom variant=\"subtitle2\">{message}</Typography>\r\n                  <Typography gutterBottom variant=\"subtitle1\">Likes: {likes.length}</Typography>\r\n                  <img src={selectedFile} width=\"200px\" />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Paper>\r\n    )\r\n}\r\n\r\nexport default Post","C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\components\\Home\\styles.js",[],"C:\\Users\\Gyanendra\\Desktop\\Story-app\\client\\src\\components\\PostDetails\\styles.js",[],{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"136","replacedBy":"140"},{"ruleId":"138","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":25,"column":6,"nodeType":"144","endLine":25,"endColumn":12,"suggestions":"145"},{"ruleId":"146","severity":1,"message":"147","line":8,"column":8,"nodeType":"148","messageId":"149","endLine":8,"endColumn":16},{"ruleId":"146","severity":1,"message":"150","line":13,"column":10,"nodeType":"148","messageId":"149","endLine":13,"endColumn":17},{"ruleId":"142","severity":1,"message":"151","line":36,"column":6,"nodeType":"144","endLine":36,"endColumn":16,"suggestions":"152"},{"ruleId":"146","severity":1,"message":"153","line":2,"column":67,"nodeType":"148","messageId":"149","endLine":2,"endColumn":71},{"ruleId":"154","severity":1,"message":"155","line":54,"column":131,"nodeType":"156","messageId":"157","endLine":54,"endColumn":164},{"ruleId":"142","severity":1,"message":"158","line":17,"column":8,"nodeType":"144","endLine":17,"endColumn":14,"suggestions":"159"},{"ruleId":"142","severity":1,"message":"160","line":18,"column":8,"nodeType":"144","endLine":18,"endColumn":12,"suggestions":"161"},{"ruleId":"142","severity":1,"message":"160","line":22,"column":8,"nodeType":"144","endLine":22,"endColumn":14,"suggestions":"162"},{"ruleId":"163","severity":1,"message":"164","line":67,"column":19,"nodeType":"165","endLine":67,"endColumn":59},"no-native-reassign",["166"],"no-negated-in-lhs",["167"],["166"],["167"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'clear'. Either include it or remove the dependency array.","ArrayExpression",["168"],"no-unused-vars","'InfoIcon' is defined but never used.","Identifier","unusedVar","'getPost' is defined but never used.","React Hook useEffect has missing dependencies: 'logout' and 'user?.token'. Either include them or remove the dependency array.",["169"],"'Chip' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["170"],"React Hook useEffect has a missing dependency: 'disPatch'. Either include it or remove the dependency array.",["171"],["172"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},"Update the dependencies array to be: [clear, post]",{"range":"183","text":"184"},"Update the dependencies array to be: [location, logout, user?.token]",{"range":"185","text":"186"},"Update the dependencies array to be: [dispatch, page]",{"range":"187","text":"188"},"Update the dependencies array to be: [disPatch, id]",{"range":"189","text":"190"},"Update the dependencies array to be: [disPatch, post]",{"range":"191","text":"192"},[1096,1102],"[clear, post]",[1079,1089],"[location, logout, user?.token]",[524,530],"[dispatch, page]",[665,669],"[disPatch, id]",[783,789],"[disPatch, post]"]